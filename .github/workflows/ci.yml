name: Books App CI

on:
  push:
    branches:
      - "*"

jobs:
  extract-branch:
    runs-on: ubuntu-latest
    outputs:
      branch: ${{ steps.branch.outputs.value }}
    steps:
      - name: Get branch name
        id: branch
        run: echo "value=${GITHUB_REF#refs/heads/}" >> "$GITHUB_OUTPUT"

  build-backend:
    runs-on: ubuntu-latest
    needs: extract-branch
    if: ${{ always() }}
    steps:
      - uses: actions/checkout@v3

      - name: Check for backend changes
        id: changed
        run: |
          git fetch origin ${{ github.event.before }}
          CHANGED=$(git diff --name-only ${{ github.event.before }} ${{ github.sha }} | grep '^books-app-backend/' || true)
          echo "changed=$CHANGED" >> $GITHUB_OUTPUT
        continue-on-error: true

      - name: Login to Docker
        if: steps.changed.outputs.changed != ''
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and Push Backend
        if: steps.changed.outputs.changed != ''
        run: |
          docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/books-app-backend:${{ needs.extract-branch.outputs.branch }}-latest ./books-app-backend
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/books-app-backend:${{ needs.extract-branch.outputs.branch }}-latest

  build-frontend:
    runs-on: ubuntu-latest
    needs: extract-branch
    if: ${{ always() }}
    steps:
      - uses: actions/checkout@v3

      - name: Check for frontend changes
        id: changed
        run: |
          git fetch origin ${{ github.event.before }}
          CHANGED=$(git diff --name-only ${{ github.event.before }} ${{ github.sha }} | grep '^books-app-frontend/' || true)
          echo "changed=$CHANGED" >> $GITHUB_OUTPUT
        continue-on-error: true

      - name: Login to Docker
        if: steps.changed.outputs.changed != ''
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and Push Frontend
        if: steps.changed.outputs.changed != ''
        run: |
          docker build \
            --build-arg VITE_BACKEND_HOST=localhost \
            --build-arg VITE_BACKEND_PORT=8080 \
            --build-arg VITE_BACKEND_BASE_PATH=/api \
            -t ${{ secrets.DOCKERHUB_USERNAME }}/books-app-frontend:${{ needs.extract-branch.outputs.branch }}-latest ./books-app-frontend
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/books-app-frontend:${{ needs.extract-branch.outputs.branch }}-latest
