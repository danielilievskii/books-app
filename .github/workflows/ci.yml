name: Books App CI

on:
  push:
    branches:
      - "*"

jobs:
  extract-version:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.get-version.outputs.value }}
    steps:
      - uses: actions/checkout@v3

      - name: Read version from VERSION file
        id: get-version
        run: |
          VERSION=$(cat VERSION.txt)
          echo "value=$VERSION" >> "$GITHUB_OUTPUT"

  build-backend:
    runs-on: ubuntu-latest
    needs: extract-version
    if: ${{ always() }}
    steps:
      - uses: actions/checkout@v3

      - name: Check for backend changes
        id: changed
        run: |
          git fetch origin ${{ github.event.before }}
          CHANGED=$(git diff --name-only ${{ github.event.before }} ${{ github.sha }} | grep '^books-app-backend/' || true)
          echo "changed=$CHANGED" >> $GITHUB_OUTPUT
        continue-on-error: true

      - name: Login to Docker
        if: steps.changed.outputs.changed != ''
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and Push Backend
        if: steps.changed.outputs.changed != ''
        run: |
          VERSION=${{ needs.extract-version.outputs.version }}
          IMAGE=${{ secrets.DOCKERHUB_USERNAME }}/books-app-backend
          docker build -t $IMAGE:$VERSION ./books-app-backend
          docker tag $IMAGE:$VERSION $IMAGE:latest
          docker push $IMAGE:$VERSION
          docker push $IMAGE:latest

  build-frontend:
    runs-on: ubuntu-latest
    needs: extract-version
    if: ${{ always() }}
    steps:
      - uses: actions/checkout@v3

      - name: Check for frontend changes
        id: changed
        run: |
          git fetch origin ${{ github.event.before }}
          CHANGED=$(git diff --name-only ${{ github.event.before }} ${{ github.sha }} | grep '^books-app-frontend/' || true)
          echo "changed=$CHANGED" >> $GITHUB_OUTPUT
        continue-on-error: true

      - name: Login to Docker
        if: steps.changed.outputs.changed != ''
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and Push Frontend
        if: steps.changed.outputs.changed != ''
        run: |
          VERSION=${{ needs.extract-version.outputs.version }}
          IMAGE=${{ secrets.DOCKERHUB_USERNAME }}/books-app-frontend
          docker build \
            --build-arg VITE_BACKEND_HOST=localhost \
            --build-arg VITE_BACKEND_PORT=8080 \
            --build-arg VITE_BACKEND_BASE_PATH=/api \
            -t $IMAGE:$VERSION ./books-app-frontend
          docker tag $IMAGE:$VERSION $IMAGE:latest
          docker push $IMAGE:$VERSION
          docker push $IMAGE:latest
